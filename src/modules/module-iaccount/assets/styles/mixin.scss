@import './variable.scss';


// 锁定图片尺寸
@mixin max-size ($size: 100%) {
  max-width: $size;
  max-height: $size;
}

// 多行溢出
@mixin mult-line($line: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
}

// 前缀icon
@mixin prefix-icon($width: 0, $height: 0) {
  @include pos-y();
  content: '';
  height: $height;
  width: $width;
  background-repeat: no-repeat;
  background-size: contain;
}

// 不换行
@mixin no-wrap() {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

// 扩展点击区域
@mixin extend-click() {
  position: relative;
  &::before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
  }
}

// 满屏
@mixin fixed-full($zIndex: 2) {
  position: fixed;
  z-index: $zIndex;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// 弹性布局
@mixin flex-box($row: 'flex-start', $col: 'flex-start', $main: 'row') {
  display: flex;
  justify-content: $row;
  align-items: $col;
  flex-direction: $main;
}

// 清除浮动
@mixin clearfix() {
  &:before, &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
    overflow :hidden;
  }
}

// 水平垂直居中
@mixin pos-center($zIndex: 1) {
  position: absolute;
  top: 50%;
  left:50%;
  transform: translate(-50%, -50%);
  z-index: $zIndex;
}

// 仅水平居中
@mixin pos-x($zIndex: 1) {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  z-index: $zIndex;
}

// 仅垂直居中
@mixin pos-y($zIndex: 1) {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: $zIndex;
}


// 边框 - 适用2px以上
@mixin border-name ($width: 2px, $color: $color-border, $style: solid, $dir: '') {
  @if ($dir == top) {
    border-top: $width $style $color;
  }
  @else if ($dir == bottom) {
    border-bottom: $width $style $color;
  }
  @else if ($dir == left) {
    border-left: $width $style $color;
  }
  @else if ($dir == right) {
    border-right: $width $style $color;
  }
  @else {
    border: $width $style $color;
  }
}

// 边框 1px - 存在层级覆盖
@mixin border-1px ($color: $color-border, $type: solid, $radius: inherit) {
  position: relative;
  &:after {
    content: '\0020';
    pointer-events: none;
    width: 100%;
    height: 100%;
    border: 1PX $type $color;
    border-radius: $radius;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 1;
    transform-origin: 0 0;
    box-sizing: border-box;
    @media (min-resolution: 2dppx) {
      width: 200%;
      height: 200%;
      transform: scale(.5);
    }
    @media (min-resolution: 3dppx) {
      width: 300%;
      height: 300%;
      transform: scale(.3333);
    }
  }
}

// 水平(上下)边框
@mixin border-x($dir: 'top', $color: '#e5e5e5', $left: 0, $right: 0, $style: 'solid') {
  position: relative;
  &:before {
    content: '\0020';
    height: 1px;
    transform: scaleY(0.5);
    position: absolute;
    left: $left;
    right: $right;
    @if ($dir == 'top') {
      top: 0;
      border-top: 1px $color $style;
      transform-origin: 0 top;
    }
    @else {
      bottom: 0;
      border-bottom: 1px $color $style;
      transform-origin: 0 bottom;
    }
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33333);
    }
  }
}

// 垂直(左右)边框
@mixin border-y ($dir: 'right', $color: $color-border, $top: 0, $bottom: 0, $style: 'solid') {
  position: relative;
  &:after {
    content: '\0020';
    width: 1px;
    transform: scaleX(0.5);
    position: absolute;
    top: $top;
    bottom: $bottom;
    @if ($dir == right) {
      right: 0;
      border-right: 1px $color $style;
      transform-origin: right 0;
    }
    @else {
      left: 0;
      border-left: 1px $color $style;
      transform-origin: left 0;
    }
    @media (min-resolution: 3dppx) {
      transform: scaleX(0.33333);
    }
  }
}

// 箭头三角形 - 线条
@mixin arrow($dir: 'right', $width: 30px, $color: $color-999, $border: 2px, $poa: $width/2, $mt: $width/2) {
  position: relative;
  &:after {
    content: '\0020';
    display: block;
    width: $width;
    height: $width;
    border-top: $border solid $color;
    border-right: $border solid $color;
    position: absolute;
    top: 50%;
    margin-top: $mt*-1;
    @if ($dir == bottom) {
      right: $poa+$width;
      transform: rotate(135deg);
      transform-origin: right center;
    }
    @else if ($dir == top) {
      right: $poa;
      transform: rotate(-45deg);
      transform-origin: left center;
    }
    @else if ($dir == left) {
      left: $poa;
      transform: rotate(-135deg);
      transform-origin: center center;
    }
    @else {
      right: $poa;
      transform: rotate(45deg);
      transform-origin: center center;
    }
  }
}


@mixin triangle($width: .05rem, $color: $color-text, $dir: 'top') {
  position: relative;
  padding-right: ($width * 2 + .05rem);
  &:after {
    content: '';
    height: 0;
    width: 0;
    border-width: $width;
    border-style: solid;
    border-color: transparent;
    @include pos-y();
    right: 0;
    @if ($dir == top) {
      border-bottom-color: $color;
    }
    @else if ($dir == right) {
      border-left-color: $color;
    }
    @else if ($dir == bottom) {
      border-top-color: $color;
    }
    @else if ($dir == left) {
      border-right-color: $color;
    }
  }
}
        